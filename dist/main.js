!function(s){var t={};function e(i){if(t[i])return t[i].exports;var h=t[i]={i:i,l:!1,exports:{}};return s[i].call(h.exports,h,h.exports,e),h.l=!0,h.exports}e.m=s,e.c=t,e.d=function(s,t,i){e.o(s,t)||Object.defineProperty(s,t,{enumerable:!0,get:i})},e.r=function(s){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(s,"__esModule",{value:!0})},e.t=function(s,t){if(1&t&&(s=e(s)),8&t)return s;if(4&t&&"object"==typeof s&&s&&s.__esModule)return s;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:s}),2&t&&"string"!=typeof s)for(var h in s)e.d(i,h,function(t){return s[t]}.bind(null,h));return i},e.n=function(s){var t=s&&s.__esModule?function(){return s.default}:function(){return s};return e.d(t,"a",t),t},e.o=function(s,t){return Object.prototype.hasOwnProperty.call(s,t)},e.p="",e(e.s=1)}([function(s,t){const e={collide(s,t){const e=s.physics.width?s.physics.width:s.sprite.width,i=t.physics.width?t.physics.width:t.sprite.width,h=s.physics.height?s.physics.height:s.sprite.height,c=t.physics.height?t.physics.height:t.sprite.height;return s.physics.x<t.physics.x+i&&s.physics.x+e>t.physics.x&&s.physics.y<t.physics.y+c&&s.physics.y+h>t.physics.y},collide_with_scale(s,t){const e=s.physics.width?s.physics.width:s.sprite.width*s.sprite.width_scale,i=t.physics.width?t.physics.width:t.sprite.width*t.sprite.width_scale,h=s.physics.height?s.physics.height:s.sprite.height*s.sprite.height_scale,c=t.physics.height?t.physics.height:t.sprite.height*t.sprite.height_scale;return s.physics.x<t.physics.x+i&&s.physics.x+e>t.physics.x&&s.physics.y<t.physics.y+c&&s.physics.y+h>t.physics.y}};s.exports=e},function(s,t,e){"use strict";e.r(t);var i=class{constructor(s,t,e=null,i=null){this.x=s,this.y=t,this.width=e,this.height=i,this.dLeft=0,this.dRight=0,this.dDown=0,this.dUp=0,this.dx=this.dx.bind(this),this.dy=this.dy.bind(this),this.speed=1.5}dx(){return-this.dLeft+this.dRight}dy(){return-this.dUp+this.dDown}updatePosition(){this.x+=this.dx(),this.y+=this.dy()}boundedUpdate(){const{dx:s,dy:t}=this;this.boundedMove({x:s(),y:t()},{top:0,down:550,left:80,right:350})}boundedMove(s,t){this.x+=s.x,this.y+=s.y,this.x<t.left&&(this.x=t.left),this.x>t.right&&(this.x=t.right),this.y<t.top&&(this.y=t.top),this.y>t.down&&(this.y=t.down)}};var h=class{constructor(s,t,e,i=1,h=1){this.img=s,this.height=t,this.width=e,this.width_scale=i,this.height_scale=h}};const c=new Image;c.src="./assets/images/road.png";var a=class{constructor(s){this.physics=s,this.sprite=new h(c,1262,502),this.score=0,this.gameOver=!1,this.box=null,this.marked=null}move(){this.physics.dDown=this.physics.speed}addScore(){this.gameOver?this.score:this.score+=1}makeGreen(){}stop(){this.physics.dDown=0,this.gameOver=!0}addSpeed(){}};const n=new Image;n.src="./assets/images/turbo.png";const r=new Image;r.src="./assets/images/redbox.png";var o=class{constructor(s){this.physics=s,this.sprite=new h(n,30,31,1.5,1.5),this.box=new h(r,40,50,1.5,1.5),this.marked=!0}move(){this.physics.dDown=this.physics.speed}stop(){this.physics.dDown=0}},d=e(0),p=e.n(d);const y=new Image,l=new Image;y.src="./assets/images/rock.png",l.src="./assets/images/redbox.png";var w=class{constructor(s){this.physics=s,this.sprite=new h(y,30,35,1.5,1.5),this.box=new h(l,40,50,1.5,1.5),this.marked=!0}move(){this.physics.dDown=this.physics.speed}stop(){this.physics.dDown=0}};const g=new Image;g.src="./assets/images/money.png";const m=new Image;m.src="./assets/images/redbox.png";var u=class{constructor(s,t){this.physics=s,this.sprite=new h(g,40,40,1.5,1.5),this.box=new h(m,40,50,1.5,1.75),this.marked=t}move(){this.physics.dDown=this.physics.speed}stop(){this.physics.dDown=0}};const f=new Image;f.src="./assets/images/car.png";var v=class{constructor(s){this.physics=s,this.sprite=new h(f,150,70),this.life=3,this.box=null,this.marked=null}hitObstacle(){this.life-=1}getLife(){this.life+=1}resetLife(){this.life=3}makeGreen(){}makeRed(){}draw(s){const{sprite:t,physics:e}=this,i=t.width/-2+e.width/2,h=t.height/-2+e.height/2;s.drawImage(t.img,0,0,t.width,t.height,e.x+i,e.y+h,t.width,t.height)}};var x=()=>({road:new a(new i(0,-561)),car:new v(new i(214,500,70,100))}),k=0;class _{constructor(s,t){this.canvas=s,this.ctx=t,this.gameOver=!1,this.rocks=[],this.life=[],this.cash=[],this.assets=x(),this.animate=null}static checkCollision(s,t,e,i){t instanceof w&&p.a.collide_with_scale(s,t)&&(s.hitObstacle(),s.makeRed(),e.splice(e.indexOf(t),1)),t instanceof o&&p.a.collide_with_scale(s,t)&&(s.getLife(),s.makeGreen(),e.splice(e.indexOf(t),1)),t instanceof u&&p.a.collide_with_scale(s,t)&&(i.road.score+=100,i.road.makeGreen(),e.splice(e.indexOf(t),1))}static checkCanvas(s,t){s instanceof o&&s.physics.y>canvas.height&&t.splice(t.indexOf(s),1),s instanceof w&&s.physics.y>canvas.height&&t.splice(t.indexOf(s),1),s instanceof u&&s.physics.y>canvas.height&&t.splice(t.indexOf(s),1)}drawAsset(s){const{physics:t,sprite:e,box:i,marked:h}=s;s instanceof a&&s.physics.y>=0&&e.height>canvas.height&&(s.physics.y>canvas.height&&(s.physics.y=canvas.height-e.height),this.ctx.drawImage(e.img,0,0,e.width,e.height,s.physics.x,s.physics.y-e.height+1,e.width,e.height)),s instanceof w&&s.physics.y>=0&&s.physics.y>canvas.height&&(this.ctx.drawImage(e.img,0,0,e.width,e.height,s.physics.x,s.physics.y-900,e.width*e.width_scale,e.height*e.height_scale),h&&this.ctx.drawImage(i.img,0,0,i.width,i.height,s.physics.x+.5*(e.width*e.width_scale-i.width*e.width_scale),s.physics.y-900+.5*(e.height*e.height_scale-i.height*i.height_scale),i.width*i.width_scale,i.height*i.height_scale)),s instanceof v?s.draw(this.ctx):(this.ctx.drawImage(e.img,0,0,e.width,e.height,t.x,t.y,e.width*e.width_scale,e.height*e.height_scale),h&&this.ctx.drawImage(i.img,0,0,i.width,i.height,t.x+.5*(e.width*e.width_scale-i.width*i.width_scale),s.physics.y+.5*(e.height*e.height_scale-i.height*i.height_scale),i.width*i.width_scale,i.height*i.height_scale)),0!=this.assets.car.life&&(s instanceof v?t.boundedUpdate():t.updatePosition())}draw(){if(!this.gameOver){const s=()=>{const t=Object.values(this.assets);this.animate=requestAnimationFrame(s),this.ctx.clearRect(0,0,canvas.width,canvas.height);for(let s=0;s<t.length;s++)this.drawAsset(t[s]);this.rocks.forEach(s=>{_.checkCollision(this.assets.car,s,this.rocks),_.checkCanvas(s,this.rocks)}),this.life.forEach(s=>{_.checkCollision(this.assets.car,s,this.life),_.checkCanvas(s,this.life)}),this.cash.forEach(s=>{_.checkCollision(this.assets.car,s,this.cash,this.assets),_.checkCanvas(s,this.cash)}),this.life.forEach(s=>{this.drawAsset(s),s.move()}),this.rocks.forEach(s=>{this.drawAsset(s),s.move()}),this.cash.forEach(s=>{this.drawAsset(s),s.move()}),this.assets.road.addScore(),this.end()};s()}}end(){this.assets.car.life<=0&&(this.gameOver=!0,this.assets.road.stop(),this.draw(),document.getElementById("slow").innerHTML="Too Slow!",document.getElementById("how").style.visibility="hidden",document.getElementById("welcome").style.display=null)}createRock(){this.rocks.push(new w(new i(Math.floor(310*Math.random())+80,-20)))}createLife(){this.life.push(new o(new i(Math.floor(310*Math.random())+80,-20)))}createCash(s){this.cash.push(new u(new i(Math.floor(310*Math.random())+80,-20),s))}cleanUp(){window.cancelAnimationFrame(this.animate)}start(){this.gameOver=!1,document.getElementById("welcome").style.display="none",this.assets.car.resetLife(),setInterval(()=>{this.gameOver||(k%3==0?this.createRock():k%3==1?this.createCash(k%2==0):k%3==2&&this.createLife(k%2==1),k++)},5e3),this.draw(),this.assets.road.move()}}var b=_;var O=s=>{window.addEventListener("keydown",t=>{const e=s.assets.car;"a"!==t.key&&"ArrowLeft"!==t.key||(e.physics.dLeft=4),"d"!==t.key&&"ArrowRight"!==t.key||(e.physics.dRight=4),"w"!==t.key&&"ArrowUp"!==t.key||(e.physics.dUp=4),"s"!==t.key&&"ArrowDown"!==t.key||(e.physics.dDown=4)}),window.addEventListener("keyup",t=>{const e=s.assets.car;"a"!==t.key&&"ArrowLeft"!==t.key||(e.physics.dLeft=0),"d"!==t.key&&"ArrowRight"!==t.key||(e.physics.dRight=0),"w"!==t.key&&"ArrowUp"!==t.key||(e.physics.dUp=0),"s"!==t.key&&"ArrowDown"!==t.key||(e.physics.dDown=0)})};document.addEventListener("DOMContentLoaded",()=>{const s=document.getElementById("canvas"),t=s.getContext("2d");s.height=700,s.width=500;let e=new b(s,t);document.getElementById("how").innerHTML="v1 - Use directional arrows or WSAD to move your car around. Collect as much cash as you can to increase your points while avoiding the rocks!",document.getElementById("play-btn").addEventListener("click",()=>{!0===e.gameOver&&(e.cleanUp(),e=new b(s,t)),O(e),e.start()})})}]);